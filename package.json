{
  "name": "component-health",
  "displayName": "Component Health",
  "publisher": "jonaditommaso",
  "description": "",
  "version": "0.2.3",
  "icon": "images/logo.png",
  "engines": {
    "vscode": "^1.87.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jonaditommaso/component-health"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:typescript",
    "onLanguage:javascriptreact",
    "onLanguage:typescriptreact"
  ],
  "main": "./extension.js",
  "contributes": {
    "commands": [
      {
        "command": "component-health.generalCount",
        "title": "General count",
        "when": "editorLangId == javascript || editorLangId == typescript",
        "icon": {
          "light": "images/heart-black.png",
          "dark": "images/heart-white.png"
        }
      },
      {
        "command": "component-health.toggleMetricsPanel",
        "title": "Toggle Component Health Metrics",
        "icon": "$(heart)"
      },
      {
        "command": "component-health.toggle.enableUseEffectView",
        "title": "Toggle UseEffect Count"
      },
      {
        "command": "component-health.toggle.enableUseStateView",
        "title": "Toggle UseState Count"
      },
      {
        "command": "component-health.toggle.enableFunctionalComponentsView",
        "title": "Toggle Functional Components"
      },
      {
        "command": "component-health.toggle.enableInternalFunctionsView",
        "title": "Toggle Internal Functions"
      },
      {
        "command": "component-health.toggle.enableConditionalReturnsView",
        "title": "Toggle Conditional Returns"
      },
      {
        "command": "component-health.toggle.enableJSXNestingView",
        "title": "Toggle JSX Nesting"
      },
      {
        "command": "component-health.toggle.enableCustomHooksView",
        "title": "Toggle Custom Hooks"
      },
      {
        "command": "component-health.toggle.enableLinesOfCodeView",
        "title": "Toggle Lines of Code"
      },
      {
        "command": "component-health.countUseEffect",
        "title": "Count useEffect"
      },
      {
        "command": "component-health.countUseState",
        "title": "Count useState"
      },
      {
        "command": "component-health.countComponents",
        "title": "Count functional components"
      },
      {
        "command": "component-health.countLines",
        "title": "Count lines of code"
      }
    ],
    "languages": [
      {
        "id": "javascript",
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ],
        "aliases": [
          "JavaScript",
          "javascript",
          "react",
          "React",
          "typescript",
          "Typescript",
          "TypeScript"
        ],
        "mimetypes": [
          "text/javascript",
          "text/typescriptreact"
        ]
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "component-health.generalCount",
          "group": "navigation",
          "when": "editorLangId == javascript || editorLangId == typescript || editorLangId == typescriptreact",
          "icon": {
            "light": "images/heart-black.png",
            "dark": "images/heart-white.png"
          }
        }
      ]
    },
    "configuration": [
      {
        "type": "object",
        "title": "Component health",
        "properties": {
          "componentHealth.enableUseEffectView": {
            "type": "boolean",
            "default": true,
            "description": "Add counted useEffect to general command"
          },
          "componentHealth.enableUseStateView": {
            "type": "boolean",
            "default": true,
            "description": "Add counted useState to general command"
          },
          "componentHealth.enableFunctionalComponentsView": {
            "type": "boolean",
            "default": true,
            "description": "Add counted functional components to general command"
          },
          "componentHealth.enableLinesOfCodeView": {
            "type": "boolean",
            "default": true,
            "description": "Add counted lines of code to general command"
          },
          "componentHealth.enableInternalFunctionsView": {
            "type": "boolean",
            "default": true,
            "description": "Add counted internal functions to general command"
          },
          "componentHealth.enableConditionalReturnsView": {
            "type": "boolean",
            "default": true,
            "description": "Add counted conditional returns to general command"
          },
          "componentHealth.enableJSXNestingView": {
            "type": "boolean",
            "default": true,
            "description": "Add JSX nesting depth to general command"
          },
          "componentHealth.enableCustomHooksView": {
            "type": "boolean",
            "default": true,
            "description": "Add counted custom hooks to general command"
          }
        }
      }
    ]
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "vscode-test"
  },
  "capabilities": {
    "codeLensProvider": {
      "resolveProvider": "true"
    }
  },
  "devDependencies": {
    "@types/vscode": "^1.87.0",
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "eslint": "^8.56.0",
    "typescript": "^5.3.3",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.8"
  }
}
